{"ast":null,"code":"import _asyncToGenerator from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\"; // export const useDataApi = (initialUrl, initialData) => {\n//   const [url, setUrl] = useState(initialUrl);\n//   const [data, setData] = useState(initialData);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [isError, setIsError] = useState(false);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setIsLoading(true);\n//       setIsError(false);\n//       try {\n//         const result = await axios(url);\n//         setData(result.data);\n//       } catch (error) {\n//         console.log(error);\n//         setIsError(true);\n//       }\n//       setIsLoading(false);\n//     };\n//     fetchData();\n//   }, [url]);\n//   return [{ data, isLoading, isError }, setUrl];\n// };\n\nexport var useDataApi = function useDataApi() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isError = _useState6[0],\n      setIsError = _useState6[1];\n\n  console.log(aishwarya);\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setIsLoading(true);\n                setIsError(false);\n                _context.prev = 2;\n                _context.next = 5;\n                return axios(\"https://jsonplaceholder.typicode.com/posts\");\n\n              case 5:\n                result = _context.sent;\n                setData(result.data);\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n                setIsError(true);\n\n              case 13:\n                setIsLoading(false);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 9]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return [{\n    data: data,\n    isLoading: isLoading,\n    isError: isError\n  }];\n};\n\n_s(useDataApi, \"9Rl9c9trBf8iuGfgWv+jZnH3IuQ=\");","map":{"version":3,"sources":["/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/src/utils/useDataApi.js"],"names":["React","useState","useEffect","ReactDOM","axios","useDataApi","data","setData","isLoading","setIsLoading","isError","setIsError","console","log","aishwarya","fetchData","result"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAGA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAC9B,kBAAwBJ,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkCN,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA8BR,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBN,gBAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,gBAAAA,UAAU,CAAC,KAAD,CAAV;AAFgB;AAAA;AAAA,uBAIOP,KAAK,CAAC,4CAAD,CAJZ;;AAAA;AAIRY,gBAAAA,MAJQ;AAKdT,gBAAAA,OAAO,CAACS,MAAM,CAACV,IAAR,CAAP;AALc;AAAA;;AAAA;AAAA;AAAA;AAOdM,gBAAAA,OAAO,CAACC,GAAR;AACAF,gBAAAA,UAAU,CAAC,IAAD,CAAV;;AARc;AAUhBF,gBAAAA,YAAY,CAAC,KAAD,CAAZ;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATM,SAAS;AAAA;AAAA;AAAA,OAAf;;AAYAA,IAAAA,SAAS;AACV,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAO,CAAC;AAAET,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,SAAS,EAATA,SAAR;AAAmBE,IAAAA,OAAO,EAAPA;AAAnB,GAAD,CAAP;AACD,CAxBM;;GAAML,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n\n// export const useDataApi = (initialUrl, initialData) => {\n//   const [url, setUrl] = useState(initialUrl);\n//   const [data, setData] = useState(initialData);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [isError, setIsError] = useState(false);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       setIsLoading(true);\n//       setIsError(false);\n//       try {\n//         const result = await axios(url);\n//         setData(result.data);\n//       } catch (error) {\n//         console.log(error);\n//         setIsError(true);\n//       }\n//       setIsLoading(false);\n//     };\n//     fetchData();\n//   }, [url]);\n\n//   return [{ data, isLoading, isError }, setUrl];\n// };\n\n\nexport const useDataApi = () => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  console.log(aishwarya);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      setIsError(false);\n      try {\n        const result = await axios(\"https://jsonplaceholder.typicode.com/posts\");\n        setData(result.data);\n      } catch (error) {\n        console.log(error);\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  return [{ data, isLoading, isError }];\n};"]},"metadata":{},"sourceType":"module"}