{"ast":null,"code":"import _objectSpread from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./index.css\";\nimport { styles } from './shared/styles';\nimport { useDataApi } from './utils/useDataApi';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { FormModal } from \"./FormModal\";\n\nfunction App(_ref) {\n  _s();\n\n  var _this = this;\n\n  var classes = _ref.classes;\n\n  var _useDataApi = useDataApi(),\n      _useDataApi2 = _slicedToArray(_useDataApi, 1),\n      _useDataApi2$ = _useDataApi2[0],\n      datas = _useDataApi2$.data,\n      isLoading = _useDataApi2$.isLoading,\n      isError = _useDataApi2$.isError;\n\n  var firstIndex = 0;\n  var pageSize = 10;\n  useEffect(function () {\n    setActualData(datas);\n  }, [datas]);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      actualData = _useState2[0],\n      setActualData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateData1 = _useState4[0],\n      setUpdateData = _useState4[1];\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(actualData === null || actualData === void 0 ? void 0 : actualData.slice(firstIndex, pageSize)),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  React.useEffect(function () {\n    setData(actualData === null || actualData === void 0 ? void 0 : actualData.slice(firstIndex, pageSize));\n  }, [actualData]);\n\n  var handleChange = function handleChange(event, value) {\n    updateData1 ? setActualData(updateData1) : null;\n    setPage(value);\n    updateData1 ? setData(updateData1 === null || updateData1 === void 0 ? void 0 : updateData1.slice(firstIndex + pageSize * (value - 1), pageSize * value)) : setData(actualData === null || actualData === void 0 ? void 0 : actualData.slice(firstIndex + pageSize * (value - 1), pageSize * value));\n  };\n\n  var _useState5 = useState({\n    open: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openModal = _useState6[0],\n      setOpenModal = _useState6[1];\n\n  var onCloseModal = function onCloseModal() {\n    setOpenModal({\n      open: false\n    });\n  };\n\n  var handleOpenModal = function handleOpenModal(item, index) {\n    setOpenModal(_objectSpread(_objectSpread({}, item), {}, {\n      open: true,\n      index: index\n    }));\n  };\n\n  var updateData = function updateData(updateVal) {\n    var data1 = data.filter(function (item) {\n      return item.id !== updateVal.id;\n    });\n    data1.splice(updateVal.index, 0, updateVal);\n    setData(data1); // const data3 = [updateVal];\n    //   const data212 = actualData;\n    //   data3.map(x => {\n    //      let index = data212.findIndex(d=> d.id === x.id)\n    //      data212[index] = x; \n    //  })\n    //  setActualData(data212);\n\n    var dataArr = updateData1 ? updateData1 : actualData;\n    var data2 = dataArr === null || dataArr === void 0 ? void 0 : dataArr.filter(function (item) {\n      return item.id !== updateVal.id;\n    });\n    var index;\n\n    for (var i = 0; i < dataArr.length; i++) {\n      if (dataArr[i].id === updateVal.id) {\n        index = i;\n        break;\n      }\n    }\n\n    data2.splice(index, 0, updateVal);\n    setUpdateData(data2);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, data === null || data === void 0 ? void 0 : data.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      m: 1,\n      pt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      key: \"\".concat(item.title).concat(item.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      action: /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"settings\",\n        onClick: function onClick() {\n          return handleOpenModal(item, index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }))),\n      title: item.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: \"MuiTypography--subheading\",\n      variant: \"caption\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, item.body))));\n  }), /*#__PURE__*/React.createElement(FormModal, {\n    title: \"Form modal\",\n    onCloseModal: onCloseModal,\n    maxWidth: \"sm\",\n    modelData: openModal,\n    updateData: updateData,\n    cancelButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }\n  }, \"Page: \", page), /*#__PURE__*/React.createElement(Pagination, {\n    count: Math.ceil((actualData === null || actualData === void 0 ? void 0 : actualData.length) / pageSize),\n    page: page,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }\n  }));\n}\n\n_s(App, \"f6XQoET3ddVn2pcTUmKIlx03pDs=\", false, function () {\n  return [useDataApi];\n});\n\n_c = App;\nvar WrappedApp = withStyles(styles)(App);\n_c2 = WrappedApp;\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(WrappedApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 17\n  }\n}), rootElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"WrappedApp\");","map":{"version":3,"sources":["/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/src/index.js"],"names":["React","useState","useEffect","useRef","ReactDOM","withStyles","Card","CardContent","Divider","Typography","MoreVertIcon","CardHeader","IconButton","Box","styles","useDataApi","Pagination","FormModal","App","classes","datas","data","isLoading","isError","firstIndex","pageSize","setActualData","actualData","updateData1","setUpdateData","page","setPage","slice","setData","handleChange","event","value","open","openModal","setOpenModal","onCloseModal","handleOpenModal","item","index","updateData","updateVal","data1","filter","id","splice","dataArr","data2","i","length","map","card","title","content","body","Math","ceil","WrappedApp","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./index.css\";\nimport {styles} from './shared/styles';\nimport {useDataApi} from './utils/useDataApi'\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { FormModal } from \"./FormModal\";\n\n\nfunction App({ classes }) {\n  const [{ data: datas, isLoading, isError }] = useDataApi();\n  const firstIndex = 0;\n  const pageSize = 10;\n  useEffect(()=> {setActualData(datas)},[datas]);\n\n  const[actualData, setActualData]= useState(null);\n  const[updateData1, setUpdateData]= useState(null);\n  \n  const [page, setPage] = React.useState(1);\n  const [data, setData] = React.useState(actualData?.slice(firstIndex, pageSize));\n\n  React.useEffect(() => {\n    setData(actualData?.slice(firstIndex, pageSize));\n  }, [actualData]);\n\n  const handleChange = (event,value) => {\n    updateData1 ? setActualData(updateData1) : null;\n    setPage(value);\n    updateData1 ? setData(updateData1?.slice(firstIndex + pageSize * (value - 1), pageSize * value)) : setData(actualData?.slice(firstIndex + pageSize * (value - 1), pageSize * value));\n  };\n\n  const [openModal, setOpenModal] = useState({open: false});\n\n  const onCloseModal = () => {\n    setOpenModal({open: false });\n  };\n  const handleOpenModal = (item,index) => {\n    setOpenModal({...item,open: true, index: index});\n  };\n\n  const updateData = (updateVal) => {\n    const data1=data.filter(item => item.id !== updateVal.id);\n    data1.splice(updateVal.index, 0, updateVal);\n    setData(data1);\n\n\n    // const data3 = [updateVal];\n    //   const data212 = actualData;\n    //   data3.map(x => {\n    //      let index = data212.findIndex(d=> d.id === x.id)\n    //      data212[index] = x; \n    //  })\n    //  setActualData(data212);\n\n    const dataArr = updateData1 ? updateData1 : actualData;\n    const data2=dataArr?.filter(item => item.id !== updateVal.id);\n    let index;\n    for(let i = 0; i < dataArr.length; i++) {\n    if(dataArr[i].id === updateVal.id) {\n        index = i;\n        break;\n    }\n  }\n  data2.splice(index, 0, updateVal);\n  setUpdateData(data2);\n\n  };\n\n  return (\n    <div className=\"App\">\n      {data?.map((item,index) => \n      <Box m={1} pt={2}>\n      <Card className={classes.card} key={`${item.title}${item.id}`}>\n        <CardContent className={classes.content}>\n          <CardHeader\n          action={\n            <div>\n              <IconButton aria-label=\"settings\" onClick={() => handleOpenModal(item,index)}>\n                <MoreVertIcon />\n              </IconButton>\n            </div>\n          }\n          title={item.title}  \n        />\n          <Typography\n            className={\"MuiTypography--subheading\"}\n            variant={\"caption\"}\n          >\n            {item.body}\n          </Typography>\n        </CardContent>\n      </Card>\n      </Box>\n)}\n\n<FormModal\n          title=\"Form modal\"\n          onCloseModal={onCloseModal}\n          maxWidth=\"sm\"\n          modelData={openModal}\n          updateData={updateData}\n          cancelButton\n        />\n\n<Typography>Page: {page}</Typography>\n<Pagination\n        count={Math.ceil(actualData?.length / pageSize)}\n        page={page}\n        onChange={handleChange}\n      />\n\n    </div>\n  );\n}\n\nconst WrappedApp = withStyles(styles)(App);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<WrappedApp />, rootElement);\n\n"]},"metadata":{},"sourceType":"module"}