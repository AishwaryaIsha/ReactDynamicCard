{"ast":null,"code":"import _objectSpread from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"classes\", \"onClose\"];\n\nvar _jsxFileName = \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/src/FormModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { FC, useRef } from \"react\";\nimport { Button, Dialog, IconButton, Typography } from \"@material-ui/core\";\nimport { createStyles, Theme, withStyles, WithStyles, makeStyles } from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TextField from '@material-ui/core/TextField';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  });\n};\n\nvar DialogTitle = withStyles(styles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, children), onClose && /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    \"data-testid\": \"close-modal\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n});\n_c = DialogTitle;\nvar DialogContent = withStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    }\n  };\n})(MuiDialogContent);\n_c2 = DialogContent;\nvar DialogActions = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  };\n})(MuiDialogActions);\n_c3 = DialogActions;\nvar useFormModalStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1)\n      }\n    }\n  });\n});\nexport var FormModal = function FormModal(_ref) {\n  _s();\n\n  var title = _ref.title,\n      onSubmit = _ref.onSubmit,\n      onCloseModal = _ref.onCloseModal,\n      maxWidth = _ref.maxWidth,\n      modelData = _ref.modelData,\n      children = _ref.children,\n      cancelButton = _ref.cancelButton,\n      register = _ref.register;\n\n  var _React$useState = React.useState({\n    id: modelData.id,\n    title: modelData.title,\n    body: modelData.body\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputVal = _React$useState2[0],\n      setInputVal = _React$useState2[1];\n\n  console.log(\"modelData\", modelData);\n  console.log(\"inputVal\", inputVal);\n  var titleRef = useRef();\n  var bodyRef = useRef();\n\n  var onSubmit1 = function onSubmit1(e) {\n    setInputVal(_objectSpread(_objectSpread({}, inputVal), {}, {\n      tittle: titleRef.current.value,\n      body: bodyRef.current.value\n    }));\n    e.preventDefault();\n    onCloseModal();\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: onCloseModal,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: modelData.open,\n    fullWidth: true,\n    maxWidth: maxWidth,\n    \"data-testid\": \"form-modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    onClose: onCloseModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: inputVal.title,\n    inputRef: titleRef,\n    label: \"Title\",\n    name: \"title\",\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    defaultValue: inputVal.body,\n    inputRef: bodyRef,\n    label: inputVal.body,\n    name: \"body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, cancelButton && /*#__PURE__*/React.createElement(Button, {\n    onClick: onCloseModal,\n    color: \"secondary\",\n    \"data-testid\": \"cancel-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    autoFocus: true,\n    color: \"primary\",\n    \"data-testid\": \"submit-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Save changes\"))));\n};\n\n_s(FormModal, \"b8zAdxR/w3GNiu/hSpExIPB62/s=\");\n\n_c4 = FormModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DialogTitle\");\n$RefreshReg$(_c2, \"DialogContent\");\n$RefreshReg$(_c3, \"DialogActions\");\n$RefreshReg$(_c4, \"FormModal\");","map":{"version":3,"sources":["/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/src/FormModal.js"],"names":["React","FC","useRef","Button","Dialog","IconButton","Typography","createStyles","Theme","withStyles","WithStyles","makeStyles","MuiDialogTitle","MuiDialogContent","MuiDialogActions","CloseIcon","TextField","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","useFormModalStyles","FormModal","title","onSubmit","onCloseModal","maxWidth","modelData","cancelButton","register","useState","id","body","inputVal","setInputVal","console","log","titleRef","bodyRef","onSubmit1","e","tittle","current","value","preventDefault","open"],"mappings":"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","sourcesContent":["import React, { FC , useRef} from \"react\";\nimport { Button, Dialog, IconButton, Typography } from \"@material-ui/core\";\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n  makeStyles\n} from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  });\n\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose && (\n        <IconButton\n          aria-label=\"close\"\n          data-testid=\"close-modal\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nconst useFormModalStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1)\n      }\n    }\n  })\n);\n\n\nexport const FormModal = ({\n  title,\n  onSubmit,\n  onCloseModal,\n  maxWidth,\n  modelData,\n  children,\n  cancelButton,\n  register,\n}) => {\n\nconst [inputVal, setInputVal] = React.useState({id: modelData.id, title: modelData.title, body: modelData.body} );\n\nconsole.log(\"modelData\",modelData);\nconsole.log(\"inputVal\",inputVal);\n\nconst titleRef=useRef();\nconst bodyRef=useRef();\n\nconst onSubmit1 = (e) => {\n  setInputVal({...inputVal, tittle: titleRef.current.value, body: bodyRef.current.value});\n  e.preventDefault();\n  onCloseModal();\n};\n\n  return (\n    <Dialog\n      onClose={onCloseModal}\n      aria-labelledby=\"customized-dialog-title\"\n      open={modelData.open}\n      fullWidth\n      maxWidth={maxWidth}\n      data-testid=\"form-modal\"\n    >\n      <form onSubmit={onSubmit1}>\n        <DialogTitle id=\"form-dialog-title\" onClose={onCloseModal}>\n          {title}\n        </DialogTitle>\n        <DialogContent dividers>\n          <TextField defaultValue={inputVal.title} inputRef={titleRef} label=\"Title\" name=\"title\" fullWidth />\n      <TextField\n        variant=\"outlined\"\n        defaultValue={inputVal.body} \n        inputRef={bodyRef}\n        label={inputVal.body}\n        name=\"body\"\n      />\n      </DialogContent>\n        <DialogActions>\n          {cancelButton && (\n            <Button\n              onClick={onCloseModal}\n              color=\"secondary\"\n              data-testid=\"cancel-button\"\n            >\n              Cancel\n            </Button>\n          )}\n          <Button\n            type=\"submit\"\n            autoFocus\n            color=\"primary\"\n            data-testid=\"submit-button\"\n          >\n            Save changes\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}