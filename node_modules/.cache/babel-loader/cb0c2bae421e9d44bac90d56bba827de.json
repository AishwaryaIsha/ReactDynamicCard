{"ast":null,"code":"import _objectSpread from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"classes\", \"onClose\"];\n\nvar _jsxFileName = \"/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/src/FormModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { Button, Dialog, IconButton, Typography } from \"@material-ui/core\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TextField from '@material-ui/core/TextField';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  });\n};\n\nvar DialogTitle = withStyles(styles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, children), onClose && /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    \"data-testid\": \"close-modal\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })));\n});\n_c = DialogTitle;\nvar DialogContent = withStyles(function (theme) {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    }\n  };\n})(MuiDialogContent);\n_c2 = DialogContent;\nvar DialogActions = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  };\n})(MuiDialogActions);\n_c3 = DialogActions;\nexport var FormModal = function FormModal(_ref) {\n  _s();\n\n  var onCloseModal = _ref.onCloseModal,\n      maxWidth = _ref.maxWidth,\n      modelData = _ref.modelData,\n      cancelButton = _ref.cancelButton;\n\n  // const titleRef=useRef();\n  // const bodyRef=useRef();\n  var _React$useState = React.useState(modelData),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputVal = _React$useState2[0],\n      setInputVal = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      saveButton = _React$useState4[0],\n      setSaveButton = _React$useState4[1];\n\n  useEffect(function () {\n    setInputVal(modelData);\n  }, [modelData]); // useEffect(() => {\n  //   const newTitle = titleRef.current.value;\n  //   const newBody = bodyRef.current.value;\n  //   if(newTitle !== modelData.title ||  newBody !== modelData.body){\n  //     setSaveButton(false);\n  //   }},[inputVal]); \n  // const newTitle = titleRef.current.value;\n  // const newBody = bodyRef.current.value;\n  // //setInputVal({...inputVal, tittle: titleRef.current.value, body: newBody});\n  // if(newTitle !== modelData.title ||  newBody !== modelData.body){\n  //   setSaveButton(false);\n  // }\n  // const newTitle = titleRef.current.value;\n  //   const newBody = bodyRef.current.value;\n  //   console.log(\"newTitle\",newTitle);\n\n  useEffect(function () {\n    inputVal.title !== modelData.title || inputVal.body !== modelData.body ? setSaveButton(false) : setSaveButton(true);\n  }, [inputVal]);\n\n  var handleChange = function handleChange(key, e) {\n    key === \"title\" ? setInputVal(_objectSpread(_objectSpread({}, inputVal), {}, {\n      title: e.target.value\n    })) : setInputVal(_objectSpread(_objectSpread({}, inputVal), {}, {\n      body: e.target.value\n    }));\n  };\n\n  var onSubmit = function onSubmit(e) {\n    e.preventDefault();\n    onCloseModal();\n  };\n\n  console.log(\"inputVal\", inputVal);\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: onCloseModal,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: modelData.open,\n    fullWidth: true,\n    maxWidth: maxWidth,\n    \"data-testid\": \"form-modal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    onClose: onCloseModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Dialog Box\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 3,\n    variant: \"outlined\",\n    defaultValue: inputVal.title,\n    label: \"title\",\n    name: \"body\",\n    onChange: function onChange(e) {\n      return handleChange(\"title\", e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 3,\n    variant: \"outlined\",\n    defaultValue: inputVal.body,\n    name: \"Content\",\n    label: \"Content\",\n    onChange: function onChange(e) {\n      return handleChange(\"body\", e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, cancelButton && /*#__PURE__*/React.createElement(Button, {\n    onClick: onCloseModal,\n    color: \"secondary\",\n    \"data-testid\": \"cancel-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    autoFocus: true,\n    color: \"primary\",\n    \"data-testid\": \"submit-button\",\n    disabled: saveButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Save changes\"))));\n};\n\n_s(FormModal, \"4onGcogiWeOvtDjahz95LV9Ny/k=\");\n\n_c4 = FormModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DialogTitle\");\n$RefreshReg$(_c2, \"DialogContent\");\n$RefreshReg$(_c3, \"DialogActions\");\n$RefreshReg$(_c4, \"FormModal\");","map":{"version":3,"sources":["/Users/aishwaryaisha/Documents/GitHub/ReactDynamicCard/src/FormModal.js"],"names":["React","useEffect","useRef","Button","Dialog","IconButton","Typography","createStyles","withStyles","MuiDialogTitle","MuiDialogContent","MuiDialogActions","CloseIcon","TextField","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","FormModal","onCloseModal","maxWidth","modelData","cancelButton","useState","inputVal","setInputVal","saveButton","setSaveButton","title","body","handleChange","key","e","target","value","onSubmit","preventDefault","console","log","open"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef} from \"react\";\nimport { Button, Dialog, IconButton, Typography } from \"@material-ui/core\";\nimport {\n  createStyles,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = (theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  });\n\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose && (\n        <IconButton\n          aria-label=\"close\"\n          data-testid=\"close-modal\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nexport const FormModal = ({\n  //onSubmit,\n  onCloseModal,\n  maxWidth,\n  modelData,\n  //children,\n  cancelButton,\n  //inputVal, \n  //setInputVal,\n  //register,\n}) => {\n\n  // const titleRef=useRef();\n  // const bodyRef=useRef();\nconst [inputVal, setInputVal] = React.useState(modelData); \nconst [saveButton, setSaveButton] = React.useState(true); \nuseEffect(() => {setInputVal(modelData)},[modelData]); \n// useEffect(() => {\n//   const newTitle = titleRef.current.value;\n//   const newBody = bodyRef.current.value;\n//   if(newTitle !== modelData.title ||  newBody !== modelData.body){\n//     setSaveButton(false);\n//   }},[inputVal]); \n\n\n\n// const newTitle = titleRef.current.value;\n// const newBody = bodyRef.current.value;\n// //setInputVal({...inputVal, tittle: titleRef.current.value, body: newBody});\n// if(newTitle !== modelData.title ||  newBody !== modelData.body){\n//   setSaveButton(false);\n// }\n\n// const newTitle = titleRef.current.value;\n//   const newBody = bodyRef.current.value;\n//   console.log(\"newTitle\",newTitle);\n\nuseEffect(() => {\n  (inputVal.title !== modelData.title ||  inputVal.body !== modelData.body) ? setSaveButton(false) : setSaveButton(true);\n},[inputVal]); \n\n\nconst handleChange = (key,e) => {\n  key === \"title\" ? setInputVal({...inputVal, title: e.target.value}) : setInputVal({...inputVal, body: e.target.value});\n};\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n  onCloseModal();\n};\n\nconsole.log(\"inputVal\",inputVal);\n\n  return (\n    <Dialog\n      onClose={onCloseModal}\n      aria-labelledby=\"customized-dialog-title\"\n      open={modelData.open}\n      fullWidth\n      maxWidth={maxWidth}\n      data-testid=\"form-modal\"\n    >\n      <form onSubmit={onSubmit}>\n        <DialogTitle id=\"form-dialog-title\" onClose={onCloseModal}>\n          Dialog Box\n        </DialogTitle>\n        <DialogContent dividers>\n        <TextField\n        id=\"outlined-multiline-static\"\n        fullWidth\n        multiline\n        minRows={3}\n        variant=\"outlined\"\n        defaultValue={inputVal.title}\n        label=\"title\"\n        name=\"body\"\n        onChange={e => handleChange(\"title\",e)}\n      />\n      <DialogContent />\n      <TextField\n        id=\"outlined-multiline-static\"\n        fullWidth\n        multiline\n        minRows={3}\n        variant=\"outlined\"\n        defaultValue={inputVal.body} \n        name=\"Content\"\n        label=\"Content\"\n        onChange={e => handleChange(\"body\",e)}\n      />\n      </DialogContent>\n        <DialogActions>\n          {cancelButton && (\n            <Button\n              onClick={onCloseModal}\n              color=\"secondary\"\n              data-testid=\"cancel-button\"\n            >\n              Cancel\n            </Button>\n          )}\n          <Button\n            type=\"submit\"\n            autoFocus\n            color=\"primary\"\n            data-testid=\"submit-button\"\n            disabled={saveButton}\n          >\n            Save changes\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}